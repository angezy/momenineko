<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8">
  <title>{{title}}</title>
  <link rel='stylesheet' href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css'>
<link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Poppins&amp;display=swap'><link rel="stylesheet" href="./style.css">
<style>
  * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

:root {
  --primary-color: #c6c3c3;
  --second-color: #ffffff;
  --black-color: #000000;
}

body {
  background-image: url("https://codingstella.com/wp-content/uploads/2024/01/download-6-scaled.jpeg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

a {
  text-decoration: none;
  color: var(--second-color);
}

a:hover {
  text-decoration: underline;
}

.wrapper {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: rgba(0, 0, 0, 0.2);
}

.login_box {
  position: relative;
  width: 450px;
  backdrop-filter: blur(25px);
  border: 2px solid var(--primary-color);
  border-radius: 15px;
  padding: 7.5em 2.5em 4em 2.5em;
  color: var(--second-color);
  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);
}

.login-header {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--primary-color);
  width: 140px;
  height: 70px;
  border-radius: 0 0 20px 20px;
}

.login-header span {
  font-size: 30px;
  color: var(--black-color);
}

.login-header::before {
  content: "";
  position: absolute;
  top: 0;
  left: -30px;
  width: 30px;
  height: 30px;
  border-top-right-radius: 50%;
  background: transparent;
  box-shadow: 15px 0 0 0 var(--primary-color);
}

.login-header::after {
  content: "";
  position: absolute;
  top: 0;
  right: -30px;
  width: 30px;
  height: 30px;
  border-top-left-radius: 50%;
  background: transparent;
  box-shadow: -15px 0 0 0 var(--primary-color); /* Removed space before --primary-color */
}

.input_box {
  position: relative;
  display: flex;
  flex-direction: column;
  margin: 20px 0;
}

.input-field {
  width: 100%;
  height: 55px;
  font-size: 16px;
  background: transparent;
  color: var(--second-color);
  padding-inline: 20px 50px;
  border: 2px solid var(--primary-color);
  border-radius: 30px;
  outline: none;
}

#user {
  margin-bottom: 10px;
}

.label {
  position: absolute;
  top: 15px;
  left: 20px;
  transition: 0.2s;
}

.input-field:focus ~ .label,
.input-field:valid .label {
  /* Added missing closing brace here */
  position: absolute;
  top: -10px;
  left: 20px;
  font-size: 14px;
  background-color: var(--primary-color);
  border-radius: 30px;
  color: var(--black-color);
  padding: 0 10px;
} /* Closed the missing brace */

.icon {
  position: absolute;
  top: 18px;
  right: 25px;
  font-size: 20px;
}

.remember-forgot {
  display: flex;
  justify-content: space-between;
  font-size: 15px;
}

.input-submit {
  width: 100%;
  height: 50px;
  background: #ececec;
  font-size: 16px;
  font-weight: 500;
  border: none;
  border-radius: 30px;
  cursor: pointer;
  transition: 0.3s;
}

.input-submit:hover {
  background: var(--second-color);
}

.register {
  text-align: center;
}

.register a {
  font-weight: 500;
}

@media only screen and (max-width: 564px) {
  .wrapper {
    padding: 20px;
  }

  .login_box {
    padding: 7.5em 1.5em 4em 1.5em;
  }
}
</style>
</head>
<body>
<!-- partial:index.partial.html -->
<div class="wrapper">
  <div class="login_box">
<form id="signin-form" method="POST" action="/auth/signin" novalidate>
    <div class="login-header">
      <span>Login</span>
    </div>

    <div class="input_box">
      <input name="Email" type="text" id="Email" class="input-field" required>
      <label for="Email" class="label">Email</label>
      <i class="bx bx-envelope icon"></i>
    </div>

    <div class="input_box">
      <input name="Password" type="password" id="Password" class="input-field" required>
      <label for="Password" class="label">Password</label>
      <i class="bx bx-lock-alt icon"></i>
      <i id="show-password-toggle-icon" class="bx bx-eye icon"></i> <!-- Added this line -->
    </div>

    <div class="remember-forgot">
      <div class="remember-me">
        <input type="checkbox" name="rememberMe" id="rememberMe">
        <label for="rememberMe">Remember me</label>
      </div>

      <div class="forgot">
        <a href="#">Forgot password?</a>
      </div>
    </div>

    <div class="input_box">
      <input type="submit" class="input-submit cs fb" value="Login">
    </div>
</form>
    <div class="register">
      <span>Don't have an account? <a href="#">Register</a></span>
    </div>
  </div>
</div>
<!-- partial -->
  
  

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js">
  </script>
  <!-- MDB -->
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/8.1.0/mdb.umd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <!--   Core JS Files   -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script>
    const passwordInput1 = document.getElementById('Password');
    const toggleIcon = document.getElementById('show-password-toggle-icon'); // Ensure this matches the added icon

    toggleIcon.addEventListener('pointerdown', (e) => {
      e.preventDefault();

      // Toggle input type between password and text
      if (passwordInput1.type === 'password') {
        passwordInput1.type = 'text';
        toggleIcon.classList.remove('bx-eye');
        toggleIcon.classList.add('bx-eye-slash');
      } else {
        passwordInput1.type = 'password';
        toggleIcon.classList.remove('bx-eye-slash');
        toggleIcon.classList.add('bx-eye');
      }
    });
  </script>
  <script>
    $(document).ready(function () {
      $('#signin-form').on('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission
        block();
        son();
        // Get form values
        const Email = $('#Email').val().trim();
        const Password = $('#Password').val();
        const rememberMe = $('#rememberMe').is(':checked');
            console.log(Email);

        // Client-side input validation
        if (!Email || !Password) {
          Swal.fire({
            icon: 'warning',
            title: 'Input Error',
            text: 'Please fill in both Email and Password fields.',
          });
          bon();
          soff();
          return;
        }
        // Store form data in the session using AJAX
        $.ajax({
          url: '/auth/signin',
          type: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({
            Email: Email,
            Password: Password,
            rememberMe: rememberMe
          }),
          success: function () {
            // Redirect to the signin route after storing session data
            window.location.href = '/dashboard';
          },
          error: function (xhr) {
            bon();
            soff();
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: xhr.responseJSON?.message || 'Failed to store session data. Please try again.',
            });
          }
        });
      });
    });

  </script>



  <script>
    function block() { $(".sc").prop('disabled', true); }
    function bon() { $(".sc").prop('disabled', false); }
    function son() { $(".fb").addClass("spinner-border spinner-border-sm"); }
    function soff() { $(".fb").removeClass("spinner-border spinner-border-sm"); }
  </script>


</body>
</html>