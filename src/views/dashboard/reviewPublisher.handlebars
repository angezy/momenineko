<head>

<body class="g-sidenav-show bg-gray-100">
  <div class="min-height-300 bg-primary position-absolute w-100"></div>
  {{> __dsidenav}}
  <main class="main-content position-relative border-radius-lg ">
    {{> __dashnavbar}}
    <div class="row">
      {{#each ReviewPost}}
      <div class="col-md-4 p-2">
        <div class="card card-profile">
          <div class="row justify-content-center"></div>
          <div class="card-header text-center border-0 pt-0 pt-lg-2 pb-4 pb-lg-3">

          </div>
          <div class="card-body pt-0">
    
            <div class="text-center mt-4">
              <h5>{{this.review}}</h5>
              <div class="row">
                <div class="col">
                  <a href="javascript:;" data-id="{{this.reviewID}}" class="listing-detail btn btn-sm btn-primary">
                    Detail <i class="ni ni-collection"></i>
                  </a>
                  <a href="https://ipinfo.io/{{this.reviewerIP}}" target="_blank">
                    Lister IP Location <i class="ni education_hat mr-2"></i>
                  </a>
                </div>
              </div>
              <!-- Availability Switch -->
              <div class="mt-3">
                <label class="switch">
                  <input type="checkbox" class="availability-toggle" data-id="{{this.reviewID}}" {{#if
                    this.Show}}checked{{/if}}>
                  <span class="slider round"></span>
                </label>
                <span class="ml-2">Available</span>
              </div>

            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </div>

    <style>
      .switch {
        position: relative;
        display: inline-block;
        width: 34px;
        height: 20px;
      }

      .switch input {
        opacity: 0;
        width: 0;
        height: 0;
      }

      .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 20px;
      }

      .slider:before {
        position: absolute;
        content: "";
        height: 14px;
        width: 14px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: .4s;
        border-radius: 50%;
      }

      input:checked+.slider {
        background-color: #4CAF50;
      }

      input:checked+.slider:before {
        transform: translateX(14px);
      }
    </style>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".availability-toggle").forEach((toggle) => {
          toggle.addEventListener("change", function () {
            const listingId = this.getAttribute("data-id");
            const Available = this.checked ? 1 : 0;

            fetch("/update-availability", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ listingId, Available }), 
            })
              .then(response => {
                console.log("Raw response:", response); 
                return response.text();  
              })
              .then(text => {
                console.log("Response text:", text); 
                return JSON.parse(text); 
              })
              .then(data => {
                Swal.fire({
                  title: data.success ? 'Success' : 'Error',
                  text: data.success ? 'Availability updated successfully!' : 'Failed to update availability.',
                  icon: data.success ? 'success' : 'error',
                  confirmButtonText: 'Close',
                })
              })
              .catch(error => {
                console.error("Error:", error);
                alert("An error occurred. Please check the console for more details.");
              });
          });
        });
      });
    </script>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      const listings = {{{ json listings }}};
      document.addEventListener('DOMContentLoaded', function () {
        console.log('Listings:', listings);
        document.querySelectorAll('.listing-detail').forEach(button => {
          button.addEventListener('click', function () {
            const listingId = this.getAttribute('data-id');
            console.log('Clicked Listing ID:', listingId);

            const listingData = listings.find(item => String(item.listingId) === String(listingId));
            if (listingData) {
              console.log('Found Listing Data:', listingData);

              let tableHTML = '<table class="table table-bordered">';
              tableHTML += '<thead><tr><th>Field</th><th>Value</th></tr></thead><tbody>';
              for (const [key, value] of Object.entries(listingData)) {
                tableHTML += `<tr><td>${key}</td><td>${value}</td></tr>`;
              }
              tableHTML += '</tbody></table>';

              Swal.fire({
                title: 'Listing Details',
                html: tableHTML,
                icon: 'info',
                confirmButtonText: 'Close',
                width: '80%',
              });
            } else {
              Swal.fire({
                title: 'Error',
                text: `Listing data not found for ID: ${listingId}`,
                icon: 'error',
                confirmButtonText: 'Close',
              });
            }
          });
        });
      });
    </script>
</body>
</head>